apiVersion: v1
kind: ServiceAccount
metadata:
  name: iperf-client-controller-sa
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: iperf-client-role
rules:
  - apiGroups: ["example.com"]
    resources: ["iperfclients"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create", "delete", "get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: iperf-client-rolebinding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: iperf-client-controller-sa
    namespace: default
roleRef:
  kind: Role
  name: iperf-client-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Pod
metadata:
  name: iperf-client-controller
  namespace: default
spec:
  serviceAccountName: iperf-client-controller-sa
  initContainers:
    - name: install-kubernetes-client
      image: python:3.9
      command:
        - /bin/sh
        - -c
        - |
          pip install --target /app kubernetes deepdiff
      volumeMounts:
        - name: app-volume
          mountPath: /app
  containers:
    - name: iperf-client-controller
      image: python:3.9
      command: ["python", "/app/controller.py"]
      volumeMounts:
        - name: app-volume
          mountPath: /app
        - name: config-volume
          mountPath: /app/controller.py
          subPath: controller.py
      env:
        - name: PYTHONPATH
          value: /app
  volumes:
    - name: app-volume
      emptyDir: {}
    - name: config-volume
      configMap:
        name: iperf-client-controller
